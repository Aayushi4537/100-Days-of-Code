/* Sieve of Eratosthenes*/
class Solution {
public:
    int countPrimes(int n) {
        int count=0;
        vector<bool>prime(n+1,true);
        prime[0]=prime[1]=false;
        for(int i=2;i<n;i++){
            if(prime[i]== true){
                count++;
                for(int j=2*i;j<n;j=j+i){
                    prime[j]=false;
                }
            }
        }
        return count;
        
    }
};

LOGIC- This solution of counting prime numbers using the Sieve of Eratosthenes is a more optimized solution with a time complexity of O(n*log(log n))
