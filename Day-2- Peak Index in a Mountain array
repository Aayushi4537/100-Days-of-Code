//Binary Search
class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int s=0;
        int e=arr.size() - 1;
        int mid=s+(e-s)/2;
        while(s<e){
            if(arr[mid+1]>arr[mid]){
                s=mid+1;

            }
            else{
                e=mid;
            }
            mid=s+(e-s)/2;
        }
        return e;
    }
};
//Time complexity- o(log(n)), we can solve this in two-step by linear search but with binary search it is more optimised solution.
